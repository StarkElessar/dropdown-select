var r=Object.defineProperty;var h=(o,e,t)=>e in o?r(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var l=(o,e,t)=>h(o,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const c of i.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();const a={PLACEHOLDER:"Выберите опции",ALL_SELECTED:"Выбраны все",SELECTED_COUNT:"Выбрано:",ALL_OPTION_TEXT:"Все",ALL_OPTION_VALUE:"-1"},d={WRAPPER:"multi-select",BUTTON:"multi-select__button",DROPDOWN:"multi-select__dropdown",DROPDOWN_OPEN:"multi-select__dropdown_open",LIST:"multi-select__list",OPTION:"multi-select__option"};class u{constructor(e,t={}){l(this,"_options");l(this,"_originalSelect");l(this,"_selectOptions");l(this,"_selectedValues");l(this,"_eventHandlers");l(this,"_container");l(this,"_button");l(this,"_dropdown");l(this,"_isOpen",!1);l(this,"_isEnabled",!0);l(this,"handleOptionChange",({target:e})=>{this._isEnabled&&e instanceof HTMLInputElement&&(e.value===a.ALL_OPTION_VALUE?this.handleSelectAll(e.checked):this.handleSingleOptionChange(e))});l(this,"toggleDropdown",()=>{this._isEnabled&&(this._isOpen=!this._isOpen,this._dropdown.classList.toggle(d.DROPDOWN_OPEN),this._isOpen?(document.addEventListener("click",this.handleDocumentClick),this.trigger("open",{sender:this,timestamp:new Date})):(document.removeEventListener("click",this.handleDocumentClick),this.trigger("close",{sender:this,timestamp:new Date})))});l(this,"handleDocumentClick",e=>{const t=e.target;t instanceof Node&&!this._container.contains(t)&&(this.closeDropdown(),document.removeEventListener("click",this.handleDocumentClick))});this._options={wrapperClassName:d.WRAPPER,buttonClassName:d.BUTTON,dropdownClassName:d.DROPDOWN,openedClassName:d.DROPDOWN_OPEN,listClassName:d.LIST,optionClassName:d.OPTION,...t,texts:{placeholder:a.PLACEHOLDER,allSelected:a.ALL_SELECTED,selectedCount:a.SELECTED_COUNT,allOptionText:a.ALL_OPTION_TEXT,...t.texts}},this._originalSelect=e,this._selectOptions=Array.from(e.options),this._selectedValues=new Set,this._eventHandlers=new Map,this.init(),queueMicrotask(()=>{this.trigger("dataBound",{options:this._selectOptions})})}init(){const{wrapperClassName:e,buttonClassName:t,dropdownClassName:s,texts:n}=this._options;this._container=document.createElement("div"),this._container.className=e,this._button=document.createElement("button"),this._button.className=t,this._button.textContent=n.placeholder,this._button.onclick=this.toggleDropdown,this._container.appendChild(this._button),this._dropdown=document.createElement("div"),this._dropdown.className=s,this._dropdown.onchange=this.handleOptionChange,this._container.appendChild(this._dropdown),this.createCheckboxes();const i=this._originalSelect.parentNode;i&&(i.insertBefore(this._container,this._originalSelect),this._container.appendChild(this._originalSelect),this._originalSelect.style.display="none")}createOptionElement(e,t){const s=document.createElement("li");return s.className=this._options.optionClassName,s.innerHTML=`
            <label>
                <input type="checkbox" value="${e}">
                <span>${t}</span>
            </label>
        `,s}createCheckboxes(){const e=document.createElement("ul");e.className=this._options.listClassName,e.appendChild(this.createOptionElement(a.ALL_OPTION_VALUE,this._options.texts.allOptionText)),this._selectOptions.forEach(t=>{const s=this.createOptionElement(t.value,t.text);e.appendChild(s)}),this._dropdown.appendChild(e)}bind(e,t){var s;this._eventHandlers.has(e)||this._eventHandlers.set(e,new Set),(s=this._eventHandlers.get(e))==null||s.add(t),console.log(this._eventHandlers)}unbind(e,t){var s;(s=this._eventHandlers.get(e))==null||s.delete(t)}trigger(e,t){var n;const s={sender:this,...t};(n=this._eventHandlers.get(e))==null||n.forEach(i=>i(s))}closeDropdown(){this._isOpen&&(this._isOpen=!1,this._dropdown.classList.remove(this._options.openedClassName),this.trigger("close",{sender:this,timestamp:new Date}))}handleSelectAll(e){this._dropdown.querySelectorAll('input[type="checkbox"]:not([value="-1"])').forEach(s=>{s.checked=e,e?this._selectedValues.add(s.value):this._selectedValues.delete(s.value)}),this.updateButtonText(),this.trigger("change",{sender:this,selectedValues:Array.from(this._selectedValues),isAllSelected:e})}handleSingleOptionChange(e){if(e.checked)this._selectedValues.add(e.value);else{const i=this._dropdown.querySelector(`input[value="${a.ALL_OPTION_VALUE}"]`);i&&(i.checked=!1)}const t=this._dropdown.querySelectorAll(`input[type="checkbox"]:not([value="${a.ALL_OPTION_VALUE}"]`),s=Array.from(t).every(i=>i.checked),n=this._dropdown.querySelector(`input[value="${a.ALL_OPTION_VALUE}"]`);n&&(n.checked=s),this.updateButtonText(),this.trigger("change",{sender:this,selectedValues:Array.from(this._selectedValues),changedValue:e.value,isChecked:e.checked})}updateButtonText(){this._selectedValues.size===0?this._button.textContent=this._options.texts.placeholder:this._selectedValues.size===this._selectOptions.length?this._button.textContent=this._options.texts.allSelected:this._button.textContent=`${this._options.texts.selectedCount} ${this._selectedValues.size}`}setValue(e){this._isEnabled&&(this._selectedValues.clear(),this._dropdown.querySelectorAll('input[type="checkbox"]').forEach(s=>{e.includes(s.value)?(s.checked=!0,this._selectedValues.add(s.value)):s.checked=!1}),this.updateButtonText())}getSelectedValues(){return Array.from(this._selectedValues)}enable(e){this._isEnabled=e,e||this.closeDropdown(),this.updateEnabledState(),this.trigger("stateChange",{sender:this,type:"enabled",isEnabled:e,timestamp:new Date})}updateEnabledState(){this._isEnabled?(this._container.classList.remove("multi-select_disabled"),this._button.removeAttribute("disabled"),this._originalSelect.disabled=!1):(this._container.classList.add("multi-select_disabled"),this._button.setAttribute("disabled","disabled"),this._originalSelect.disabled=!0)}isDropdownOpen(){return this._isOpen}destroy(){document.removeEventListener("click",this.handleDocumentClick),this._eventHandlers.clear(),this._originalSelect.style.display="",this._originalSelect.disabled=!1,this._container.remove(),this._selectOptions=[],this._selectedValues.clear()}setDataSource(e){this._isEnabled&&(this._selectedValues.clear(),this._originalSelect.innerHTML="",this._selectOptions=e.map(t=>{const s=document.createElement("option");return s.value=t.value,s.text=t.text,this._originalSelect.appendChild(s),s}),this._dropdown.innerHTML="",this.createCheckboxes(),this.updateButtonText(),queueMicrotask(()=>{this.trigger("dataBound",{sender:this,options:this._selectOptions,timestamp:new Date})}))}}document.addEventListener("DOMContentLoaded",()=>{const o=document.getElementById("demo-select");if(o instanceof HTMLSelectElement){const e=new u(o);e.bind("stateChange",n=>{console.log("Component state changed:",n)});const t=document.getElementById("toggle-button");t&&t.addEventListener("click",()=>{const n=t.getAttribute("data-enabled")==="true";e.enable(!n),t.setAttribute("data-enabled",String(!n)),t.textContent=n?"Enable":"Disable"});const s=document.getElementById("destroy-button");s&&s.addEventListener("click",()=>{e.destroy()}),e.bind("dataBound",n=>{console.log("Data updated:",n)}),setTimeout(()=>{e.setDataSource([{value:"123",text:"Option 111"},{value:"1255",text:"Option 222"},{value:"1234",text:"Option 333"}])},4e3)}});
